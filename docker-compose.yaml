version: '3'
services:
  backend: 
    container_name: backend
    build: 
      context: backend
      dockerfile: .docker/Dockerfile.dev
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
    env_file:
      - ./backend/.env
    networks:
      - app-network
    ports:
      - '5000:5000'

  frontend:
    build:
      context: frontend
      dockerfile: .docker/Dockerfile.dev
    ports:
      - '3000:3000'
    networks:
      - app-network
    volumes:
      - ./frontend:/app/frontend

  db:
    container_name: db
    image: postgres:12.2-alpine
    restart: unless-stopped
    env_file: "./backend/.env"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER} || exit 1"]
      interval: 5s
      timeout: 3s
    networks:
      - app-network

volumes:
  postgres-data: {}


networks:
  app-network:
    driver: "bridge"